{"version":3,"sources":["../src/index.ts","../src/commands/add.ts","../src/utils/logger.ts","../src/utils/get-package-manager.ts","../src/commands/init.ts","../src/utils/handle-error.ts","../src/utils/templates.ts"],"sourcesContent":["import { Command } from 'commander';\nimport { add } from './commands/add.js';\nimport { init } from './commands/init.js';\n\nfunction main() {\n  const program = new Command().name('usmds').description('CLI for adding USMDS components to React Native apps').version('0.1.8');\n\n  program.addCommand(add);\n  program.addCommand(init);\n\n  program.parse(process.argv);\n}\n\nmain();\n","import { Command } from 'commander';\nimport { existsSync } from 'fs';\nimport path from 'path';\nimport prompts from 'prompts';\nimport * as z from 'zod';\nimport { logger } from '../utils/logger';\nimport { getPackageManager } from '../utils/get-package-manager';\nimport { checkDependenciesExist, runInit } from './init';\nimport { spawn } from 'child_process';\n\n// Registry configuration\nconst REGISTRY_BASE_URL = 'https://storage.googleapis.com/usmds-registry/r/usa';\n\n// Available components\nconst AVAILABLE_COMPONENTS = [\n  'alert', 'avatar', 'badge', 'banner', 'biometricsignin',\n  'button', 'buttongroup', 'card', 'checkbox', 'checkboxtile',\n  'collapsible', 'dialog', 'icon', 'link', 'pagination',\n  'progress', 'radiobutton', 'radiotile', 'snackbar',\n  'stepindicator', 'tag', 'text', 'textarea', 'textinput', 'toggle'\n];\n\nconst addOptionsSchema = z.object({\n  components: z.array(z.string()).optional(),\n  yes: z.boolean(),\n  overwrite: z.boolean(),\n  cwd: z.string(),\n  all: z.boolean()\n});\n\nexport const add = new Command()\n  .name('add')\n  .description('Add USMDS components to your project')\n  .argument('[components...]', 'Components to add')\n  .option('-y, --yes', 'Skip confirmation prompt', false)\n  .option('-o, --overwrite', 'Overwrite existing files', false)\n  .option('-a, --all', 'Add all available components', false)\n  .option('-c, --cwd <cwd>', 'Working directory (defaults to current)', process.cwd())\n  .action(async (components, opts) => {\n    const options = addOptionsSchema.parse({\n      components,\n      ...opts\n    });\n\n    const cwd = path.resolve(options.cwd);\n\n    if (!existsSync(cwd)) {\n      logger.error(`Directory ${cwd} does not exist`);\n      process.exit(1);\n    }\n\n    // Single initialization check\n    const initialized = await checkDependenciesExist(cwd);\n    if (!initialized) {\n      logger.info(`Project not initialized. Running 'usmds init' first...`);\n      try {\n        await runInit(cwd);\n        logger.success('Successfully initialized project');\n      } catch (error) {\n        logger.error('Failed to initialize project');\n        logger.error(error as Error);\n        process.exit(1);\n      }\n    }\n\n    try {\n      // Determine which components to install\n      let selectedComponents = options.all ? AVAILABLE_COMPONENTS : options.components;\n\n      // If no components specified, show selection prompt\n      if (!selectedComponents?.length && !options.all) {\n        const response = await prompts({\n          type: 'multiselect',\n          name: 'components',\n          message: 'Select components to add:',\n          choices: AVAILABLE_COMPONENTS.map((component) => ({\n            title: component,\n            value: component\n          }))\n        });\n\n        selectedComponents = response.components;\n      }\n\n      if (!selectedComponents?.length) {\n        logger.warn('No components selected');\n        process.exit(0);\n      }\n\n      // Build component URLs\n      const componentUrls = selectedComponents.map((component) => {\n        const lowerCaseComponent = component.toLowerCase();\n        return lowerCaseComponent.startsWith('http')\n          ? lowerCaseComponent\n          : `${REGISTRY_BASE_URL}/${lowerCaseComponent}.json`;\n      });\n\n      // Build shadcn command options\n      const shadcnOptions: string[] = [];\n      if (options.overwrite) {\n        shadcnOptions.push('--overwrite');\n      }\n      if (options.yes) {\n        shadcnOptions.push('--yes');\n      }\n\n      // Get package manager and build command\n      const packageManager = await getPackageManager(cwd);\n\n      // Determine the binary runner (npx, pnpm dlx, yarn dlx, or bunx)\n      const binaryRunner = packageManager === 'npm'\n        ? ['npx']\n        : packageManager === 'pnpm'\n        ? ['pnpm', 'dlx']\n        : packageManager === 'yarn'\n        ? ['yarn', 'dlx']\n        : ['bunx'];\n\n      const commandArgs = [\n        ...binaryRunner.slice(1),\n        'shadcn@latest',\n        'add',\n        ...shadcnOptions,\n        ...componentUrls\n      ].filter((option) => option !== undefined && option !== '');\n\n      logger.info('Installing components...');\n\n      // Run shadcn add command\n      await new Promise<void>((resolve, reject) => {\n        const proc = spawn(binaryRunner[0], commandArgs, {\n          cwd,\n          stdio: 'inherit'\n        });\n\n        proc.on('exit', (code) => {\n          if (code === 0) {\n            logger.success('All components installed successfully!');\n            resolve();\n          } else {\n            reject(new Error(`shadcn add exited with code ${code}`));\n          }\n        });\n\n        proc.on('error', (error) => {\n          reject(error);\n        });\n      });\n    } catch (error) {\n      logger.error('Failed to add components');\n      logger.error(error as Error);\n      process.exit(1);\n    }\n  });\n","import chalk from \"chalk\";\n\nexport const logger = {\n  info: (message: string) => console.log(chalk.blue(message)),\n  success: (message: string) => console.log(chalk.green(message)),\n  warn: (message: string) => console.log(chalk.yellow(message)),\n  error: (message: string | Error) => {\n    const errorMessage = message instanceof Error ? message.message : message;\n    console.error(chalk.red(errorMessage));\n  }\n};\n","import { detect } from '@antfu/ni';\nimport { existsSync } from 'fs';\nimport path from 'path';\n\nexport type PackageManager = 'npm' | 'yarn' | 'pnpm' | 'bun';\n\nexport async function getPackageManager(targetDir: string): Promise<PackageManager> {\n  // First check for lock files to determine the project's package manager\n  if (existsSync(path.join(targetDir, 'bun.lockb'))) return 'bun';\n  if (existsSync(path.join(targetDir, 'pnpm-lock.yaml'))) return 'pnpm';\n  if (existsSync(path.join(targetDir, 'yarn.lock'))) return 'yarn';\n  if (existsSync(path.join(targetDir, 'package-lock.json'))) return 'npm';\n\n  // If no lock file exists, try to detect from environment\n  try {\n    const detected = await detect({ programmatic: true, cwd: targetDir });\n    switch (detected) {\n      case 'bun':\n        return 'bun';\n      case 'pnpm':\n        return 'pnpm';\n      case 'yarn@berry':\n      case 'yarn':\n        return 'yarn';\n      default:\n        return 'npm';\n    }\n  } catch {\n    // If detection fails, return npm as fallback\n    return 'npm';\n  }\n}\n\nexport function getInstallCommand(packageManager: PackageManager): {\n  install: string[];\n  installDev: string[];\n  useExeca: boolean;\n  isBun: boolean;\n} {\n  switch (packageManager) {\n    case 'bun':\n      return {\n        install: ['add'],\n        installDev: ['add', '-d'],\n        useExeca: false,\n        isBun: true\n      };\n    case 'pnpm':\n      return {\n        install: ['add'],\n        installDev: ['add', '-D'],\n        useExeca: true,\n        isBun: false\n      };\n    case 'yarn':\n      return {\n        install: ['add'],\n        installDev: ['add', '--dev'],\n        useExeca: true,\n        isBun: false\n      };\n    default:\n      return {\n        install: ['install'],\n        installDev: ['install', '--save-dev'],\n        useExeca: true,\n        isBun: false\n      };\n  }\n}\n","import chalk from 'chalk';\nimport { Command } from 'commander';\nimport { existsSync, promises as fs } from 'fs';\nimport ora from 'ora';\nimport path from 'path';\nimport * as z from 'zod';\nimport { getPackageManager, getInstallCommand } from '../utils/get-package-manager';\nimport { handleError } from '../utils/handle-error';\nimport { logger } from '../utils/logger';\nimport * as templates from '../utils/templates';\nimport { spawn } from 'child_process';\n\nconst ESSENTIAL_DEPENDENCIES = [\n  'class-variance-authority',\n  'clsx',\n  'nativewind@^4.1.23',\n  'tailwindcss-animate',\n  'tailwind-merge',\n  'react-native-reanimated',\n  'react-native-svg',\n  'lucide-react-native',\n  '@rn-primitives/types',\n  '@rn-primitives/slot',\n  '@rn-primitives/portal'\n];\n\nconst DEV_DEPENDENCIES = ['tailwindcss@^3.3.2'];\n\nconst initOptionsSchema = z.object({\n  cwd: z.string(),\n  yes: z.boolean()\n});\n\nexport const init = new Command()\n  .name('init')\n  .description('initialize your project and install dependencies')\n  .option('-y, --yes', 'skip confirmation prompt.', false)\n  .option('-c, --cwd <cwd>', 'the working directory. defaults to the current directory.', process.cwd())\n  .action(async (opts) => {\n    try {\n      const options = initOptionsSchema.parse(opts);\n      const cwd = path.resolve(options.cwd);\n\n      await runInit(cwd);\n\n      logger.info(`${chalk.green('Success!')}`);\n    } catch (error) {\n      handleError(error);\n    }\n  });\n\nasync function writeFileGracefully(filePath: string, content: string) {\n  if (existsSync(filePath)) {\n    const existingContent = await fs.readFile(filePath, 'utf8');\n\n    if (filePath.endsWith('tailwind.config.js')) {\n      await fs.writeFile(filePath, content, 'utf8');\n      return;\n    }\n    // For other files, continue with the existing append logic\n    const normalizedExisting = existingContent.replace(/\\s+/g, '').replace(/\\r\\n/g, '\\n');\n    const normalizedContent = content.replace(/\\s+/g, '').replace(/\\r\\n/g, '\\n');\n\n    if (!normalizedExisting.includes(normalizedContent)) {\n      await fs.writeFile(filePath, `${existingContent}\\n${content}`, 'utf8');\n    }\n  } else {\n    await fs.writeFile(filePath, content, 'utf8');\n  }\n}\n\nasync function hasExistingCnFunction(filePath: string): Promise<boolean> {\n  try {\n    const content = await fs.readFile(filePath, 'utf8');\n\n    // Remove comments and strings to avoid false positives\n    const cleanContent = content\n      .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '') // Remove multi-line comments\n      .replace(/\\/\\/.*/g, '') // Remove single-line comments\n      .replace(/'.*?'/g, '') // Remove single-quote strings\n      .replace(/\".*?\"/g, '') // Remove double-quote strings\n      .replace(/`.*?`/g, ''); // Remove template literals\n\n    // Look for function declaration or arrow function assignment\n    const cnPatterns = [\n      /function\\s+cn\\s*\\(/, // function cn(\n      /const\\s+cn\\s*=\\s*function\\s*\\(/, // const cn = function(\n      /const\\s+cn\\s*=\\s*\\([^)]*\\)\\s*=>/, // const cn = (...) =>\n      /export\\s+(?:const|function)\\s+cn\\s*[=\\(]/ // export const/function cn\n    ];\n\n    return cnPatterns.some((pattern) => pattern.test(cleanContent));\n  } catch {\n    return false;\n  }\n}\n\nexport async function checkDependenciesExist(cwd: string): Promise<boolean> {\n  try {\n    const packageJsonPath = path.join(cwd, 'package.json');\n    if (!existsSync(packageJsonPath)) {\n      logger.warn('No package.json found');\n      return false;\n    }\n\n    const packageJson = JSON.parse(await fs.readFile(packageJsonPath, 'utf8'));\n    const allDependencies = {\n      ...(packageJson.dependencies || {}),\n      ...(packageJson.devDependencies || {})\n    };\n\n    const missingDeps = ESSENTIAL_DEPENDENCIES.filter((pkg) => {\n      const pkgName = pkg.split('@')[0] || pkg;\n      const exists = allDependencies.hasOwnProperty(pkgName);\n      return !exists;\n    });\n\n    return missingDeps.length === 0;\n  } catch (error) {\n    logger.error(`Error checking dependencies: ${error}`);\n    return false;\n  }\n}\n\nexport async function runInit(cwd: string) {\n  const spinner = ora(`Checking existing installation...`)?.start();\n\n  try {\n    // Check if already initialized\n    const isInitialized = await checkDependenciesExist(cwd);\n\n    spinner.text = 'Initializing project...';\n\n    // Create configuration files (always create these, even if already initialized)\n    await writeFileGracefully(path.join(cwd, 'tailwind.config.js'), templates.TAILWIND_CONFIG);\n    await writeFileGracefully(path.join(cwd, 'metro.config.js'), templates.METRO_CONFIG);\n    await writeFileGracefully(path.join(cwd, 'babel.config.js'), templates.BABEL_CONFIG);\n    await writeFileGracefully(path.join(cwd, 'global.css'), templates.GLOBAL_STYLES);\n    await writeFileGracefully(path.join(cwd, 'nativewind-env.d.ts'), templates.NATIVEWIND_ENV);\n    await writeFileGracefully(path.join(cwd, 'components.json'), templates.COMPONENTS_JSON);\n\n    if (isInitialized) {\n      spinner?.succeed();\n      logger.info('Configuration files updated. Dependencies already installed.');\n      return;\n    }\n\n    // Check if lib directory exists\n    const libDir = path.join(cwd, 'lib');\n    const utilsPath = path.join(libDir, 'utils.ts');\n\n    if (!existsSync(libDir)) {\n      await fs.mkdir(libDir, { recursive: true });\n      await fs.writeFile(utilsPath, templates.UTILS, 'utf8');\n    } else {\n      // If utils.ts exists, check if it already has cn function\n      if (existsSync(utilsPath)) {\n        const hasCn = await hasExistingCnFunction(utilsPath);\n        if (!hasCn) {\n          await fs.writeFile(utilsPath, `${await fs.readFile(utilsPath, 'utf8')}\\n${templates.UTILS}`, 'utf8');\n        }\n      } else {\n        await fs.writeFile(utilsPath, templates.UTILS, 'utf8');\n      }\n    }\n\n    // Create components directory\n    const componentsDir = path.join(cwd, 'components');\n    await fs.mkdir(componentsDir, { recursive: true });\n\n    spinner.succeed();\n\n    // Install dependencies\n    const dependenciesSpinner = ora(`Installing dependencies...`)?.start();\n    const packageManager = await getPackageManager(cwd);\n    const { install, installDev, isBun } = getInstallCommand(packageManager);\n\n    try {\n      if (isBun) {\n        // Use Bun.spawn for Bun\n        const installProc = Bun.spawn([packageManager, ...install, ...ESSENTIAL_DEPENDENCIES], {\n          cwd,\n          stdio: ['inherit', 'inherit', 'inherit']\n        });\n        await installProc.exited;\n\n        const installDevProc = Bun.spawn([packageManager, ...installDev, ...DEV_DEPENDENCIES], {\n          cwd,\n          stdio: ['inherit', 'inherit', 'inherit']\n        });\n        await installDevProc.exited;\n      } else {\n        // Use Node's spawn for other package managers\n        await new Promise<void>((resolve, reject) => {\n          const proc = spawn(packageManager, [...install, ...ESSENTIAL_DEPENDENCIES], {\n            cwd,\n            stdio: 'inherit'\n          });\n          proc.on('exit', (code) => {\n            if (code === 0) resolve();\n            else reject(new Error(`Process exited with code ${code}`));\n          });\n        });\n\n        await new Promise<void>((resolve, reject) => {\n          const proc = spawn(packageManager, [...installDev, ...DEV_DEPENDENCIES], {\n            cwd,\n            stdio: 'inherit'\n          });\n          proc.on('exit', (code) => {\n            if (code === 0) resolve();\n            else reject(new Error(`Process exited with code ${code}`));\n          });\n        });\n      }\n      dependenciesSpinner?.succeed();\n    } catch (error) {\n      dependenciesSpinner?.fail();\n      throw error;\n    }\n  } catch (error) {\n    spinner?.fail();\n    throw error;\n  }\n}\n","import { logger } from \"./logger\";\n\nexport function handleError(error: unknown) {\n  if (typeof error === \"string\") {\n    logger.error(error);\n    process.exit(1);\n  }\n\n  if (error instanceof Error) {\n    logger.error(error.message);\n    process.exit(1);\n  }\n\n  logger.error(\"Something went wrong. Please try again.\");\n  process.exit(1);\n} ","export const TAILWIND_CONFIG = `const { hairlineWidth } = require('nativewind/theme');\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: 'class',\n  content: ['./app/**/*.{ts,tsx}', './components/**/*.{ts,tsx}', './.rnstorybook/**/*.{ts,tsx}', '../../packages/registry/src/**/*.{ts,tsx}'],\n  presets: [require('nativewind/preset')],\n  theme: {\n    extend: {\n      colors: {\n        border: 'hsl(var(--border))',\n        input: 'hsl(var(--input))',\n        ring: 'hsl(var(--ring))',\n        background: 'hsl(var(--background))',\n        foreground: 'hsl(var(--foreground))',\n        primary: {\n          DEFAULT: 'hsl(var(--primary))',\n          foreground: 'hsl(var(--primary-foreground))'\n        },\n        secondary: {\n          DEFAULT: 'hsl(var(--secondary))',\n          foreground: 'hsl(var(--secondary-foreground))'\n        },\n        destructive: {\n          DEFAULT: 'hsl(var(--destructive))',\n          foreground: 'hsl(var(--destructive-foreground))'\n        },\n        muted: {\n          DEFAULT: 'hsl(var(--muted))',\n          foreground: 'hsl(var(--muted-foreground))'\n        },\n        accent: {\n          DEFAULT: 'hsl(var(--accent))',\n          foreground: 'hsl(var(--accent-foreground))'\n        },\n        popover: {\n          DEFAULT: 'hsl(var(--popover))',\n          foreground: 'hsl(var(--popover-foreground))'\n        },\n        card: {\n          DEFAULT: 'hsl(var(--card))',\n          foreground: 'hsl(var(--card-foreground))'\n        },\n        chart: {\n          1: 'hsl(var(--chart-1))',\n          2: 'hsl(var(--chart-2))',\n          3: 'hsl(var(--chart-3))',\n          4: 'hsl(var(--chart-4))',\n          5: 'hsl(var(--chart-5))'\n        }\n      },\n      borderWidth: {\n        hairline: hairlineWidth()\n      },\n      fontSize: {\n        '3xs': [\n          '13px',\n          {\n            lineHeight: '16px',\n            fontWeight: '400'\n          }\n        ],\n        '2xs': [\n          '14px',\n          {\n            lineHeight: '18px',\n            fontWeight: '400'\n          }\n        ],\n        xs: [\n          '15px',\n          {\n            lineHeight: '19px',\n            fontWeight: '400'\n          }\n        ],\n        sm: [\n          '16px',\n          {\n            lineHeight: '20px',\n            fontWeight: '400'\n          }\n        ],\n        md: [\n          '17px',\n          {\n            lineHeight: '21px',\n            fontWeight: '400'\n          }\n        ],\n        lg: [\n          '22px',\n          {\n            lineHeight: '28px',\n            fontWeight: '400'\n          }\n        ],\n        xl: [\n          '32px',\n          {\n            lineHeight: '40px',\n            fontWeight: '400'\n          }\n        ],\n        '2xl': [\n          '42px',\n          {\n            lineHeight: '53px',\n            fontWeight: '400'\n          }\n        ],\n        '3xl': [\n          '48px',\n          {\n            lineHeight: '60px',\n            fontWeight: '400'\n          }\n        ]\n      },\n      fontFamily: {\n        sans: ['Source Sans Pro', 'sans-serif']\n      },\n      lineHeight: {\n        'heading-2': '1.2',\n        'body-5': '1.5',\n        'alt-5': '1.3'\n      },\n      spacing: {\n        'measure-6': '75ch'\n      },\n      textStyles: ({ theme }) => ({\n        'prose-h1': {\n          fontSize: theme('fontSize.2xl'),\n          fontWeight: theme('fontWeight.normal'),\n          marginTop: '1em'\n        },\n        'prose-h2': {\n          fontSize: theme('fontSize.xl'),\n          fontWeight: theme('fontWeight.normal'),\n          marginTop: '105px'\n        },\n        'prose-h3': {\n          fontSize: theme('fontSize.lg'),\n          fontWeight: theme('fontWeight.normal'),\n          marginTop: '1em'\n        },\n        'prose-h4': {\n          fontSize: theme('fontSize.sm'),\n          fontWeight: theme('fontWeight.normal'),\n          lineHeight: theme('lineHeight.heading-2'),\n          marginTop: '105px',\n          measure: '6'\n        },\n        'prose-h5': {\n          fontSize: theme('fontSize.xs'),\n          fontWeight: theme('fontWeight.normal'),\n          lineHeight: theme('lineHeight.heading-2'),\n          marginTop: '105px',\n          measure: '6'\n        },\n        'prose-h6': {\n          fontSize: theme('fontSize.3xs'),\n          fontWeight: theme('fontWeight.normal'),\n          textTransform: 'uppercase',\n          lineHeight: theme('lineHeight.heading-2'),\n          marginTop: '105px',\n          measure: '6',\n          letterSpacing: '1px'\n        },\n        'prose-body': {\n          fontSize: theme('fontSize.sm'),\n          fontWeight: theme('fontWeight.normal'),\n          lineHeight: theme('lineHeight.body-5'),\n          measure: '6'\n        },\n        'prose-intro': {\n          fontSize: theme('fontSize.xl'),\n          fontWeight: theme('fontWeight.normal'),\n          lineHeight: theme('lineHeight.alt-5'),\n          marginTop: '1em',\n          measure: '6'\n        }\n      })\n    }\n  },\n  plugins: [\n    require('tailwindcss-animate'),\n    function ({ addComponents, theme }) {\n      addComponents({\n        '.usa-prose-h1': theme('textStyles.prose-h1'),\n        '.usa-prose-h2': theme('textStyles.prose-h2'),\n        '.usa-prose-h3': theme('textStyles.prose-h3'),\n        '.usa-prose-h4': theme('textStyles.prose-h4'),\n        '.usa-prose-h5': theme('textStyles.prose-h5'),\n        '.usa-prose-h6': theme('textStyles.prose-h6'),\n        '.usa-prose-body': theme('textStyles.prose-body'),\n        '.usa-prose-intro': theme('textStyles.prose-intro'),\n        '.usa-prose-ol': {\n          listStyleType: 'decimal',\n          paddingLeft: '1rem',\n          marginTop: '1em'\n        },\n        '.usa-prose-ul': {\n          listStyleType: 'disc',\n          paddingLeft: '1rem',\n          marginTop: '1em'\n        },\n        '.usa-prose-li': {\n          marginTop: '0.5em'\n        }\n      });\n    }\n  ]\n};\n`;\n\nexport const UTILS = `import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}`;\n\nexport const UTILS_TS = `import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}`;\n\nexport const BABEL_CONFIG = `module.exports = function (api) {\n  api.cache(true);\n  return {\n    presets: [\n      [\"babel-preset-expo\", { jsxImportSource: \"nativewind\" }],\n      \"nativewind/babel\",\n    ],\n  };\n};`;\n\nexport const METRO_CONFIG = `const { getDefaultConfig } = require(\"expo/metro-config\");\nconst { withNativeWind } = require('nativewind/metro');\n\nconst config = getDefaultConfig(__dirname);\n\nmodule.exports = withNativeWind(config, { input: './global.css' });`;\n\nexport const GLOBAL_STYLES = `@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    /* Base */\n    --background: 0 0% 100%;           /* White */\n    --foreground: 0 0% 11%;            /* #1B1B1B - gray-90 */\n    \n    /* Card */\n    --card: 0 0% 100%;                 /* White */\n    --card-foreground: 0 0% 11%;       /* #1B1B1B - gray-90 */\n    \n    /* Popover */\n    --popover: 0 0% 100%;              /* White */\n    --popover-foreground: 0 0% 11%;    /* #1B1B1B - gray-90 */\n    \n    /* Primary - USWDS Blue */\n    --primary: 209 100% 32%;           /* #005EA2 - blue-60v */\n    --primary-foreground: 0 0% 100%;   /* White */\n    \n    /* Secondary - USWDS Red */\n    --secondary: 3 61% 52%;            /* #D83933 - red-50 */\n    --secondary-foreground: 0 0% 100%; /* White */\n    \n    /* Muted */\n    --muted: 0 0% 94%;                 /* #F0F0F0 - gray-5 */\n    --muted-foreground: 0 0% 45%;      /* #757575 - gray-50 */\n    \n    /* Accent - Subtle Gray */\n    --accent: 0 0% 96%;                /* #F5F5F5 - gray-3 */\n    --accent-foreground: 0 0% 11%;     /* #1B1B1B - gray-90 */\n    \n    /* Destructive - USWDS Error Red */\n    --destructive: 17 94% 43%;         /* #D54309 - red-warm-50v */\n    --destructive-foreground: 0 0% 100%; /* White */\n    \n    /* Border */\n    --border: 204 3% 88%;              /* #DFE1E2 - base-lighter */\n    --input: 204 3% 88%;               /* #DFE1E2 - base-lighter */\n    \n    /* Ring */\n    --ring: 211 100% 57%;              /* #2491FF - focus ring */\n    \n    /* Radius */\n    --radius: 0.625rem;\n    \n    /* Chart Colors (USWDS Data Viz palette) */\n    --chart-1: 209 100% 32%;           /* #005EA2 - blue-60v */\n    --chart-2: 190 100% 44%;           /* #00BDE3 - cyan-30v */\n    --chart-3: 128 100% 33%;           /* #00A91C - green-cool-50v */\n    --chart-4: 44 100% 59%;            /* #FFBE2E - gold-20v */\n    --chart-5: 3 61% 52%;              /* #D83933 - red-50 */\n  }\n\n  .dark {\n    /* Base */\n    --background: 0 0% 11%;            /* #1B1B1B - gray-90 */\n    --foreground: 0 0% 94%;            /* #F0F0F0 - gray-5 */\n    \n    /* Card */\n    --card: 0 0% 11%;                  /* #1B1B1B - gray-90 */\n    --card-foreground: 0 0% 94%;       /* #F0F0F0 - gray-5 */\n    \n    /* Popover */\n    --popover: 0 0% 11%;               /* #1B1B1B - gray-90 */\n    --popover-foreground: 0 0% 94%;    /* #F0F0F0 - gray-5 */\n    \n    /* Primary - Lighter blue for dark */\n    --primary: 208 74% 68%;            /* #73B3E7 - blue-30 */\n    --primary-foreground: 0 0% 11%;    /* #1B1B1B - gray-90 */\n    \n    /* Secondary - Lighter red for dark */\n    --secondary: 3 77% 74%;            /* #F2938C - red-30 */\n    --secondary-foreground: 0 0% 11%;  /* #1B1B1B - gray-90 */\n    \n    /* Muted */\n    --muted: 0 0% 18%;                 /* #2E2E2E - gray-80 */\n    --muted-foreground: 0 0% 68%;      /* #ADADAD - gray-30 */\n    \n    /* Accent - Subtle Gray for dark */\n    --accent: 0 0% 15%;                /* #262626 - gray-cool-80 */\n    --accent-foreground: 0 0% 94%;     /* #F0F0F0 - gray-5 */\n    \n    /* Destructive - Lighter red for dark */\n    --destructive: 17 94% 53%;         /* #FF5E1F - red-warm-40v (brighter) */\n    --destructive-foreground: 0 0% 94%; /* #F0F0F0 - gray-5 */\n    \n    /* Border */\n    --border: 0 0% 27%;                /* #454545 - gray-70 */\n    --input: 0 0% 27%;                 /* #454545 - gray-70 */\n    \n    /* Ring */\n    --ring: 211 100% 67%;              /* #57A9FF - blue-vivid-40 (brighter) */\n    \n    /* Chart Colors (same for dark) */\n    --chart-1: 208 74% 68%;            /* #73B3E7 - blue-30 */\n    --chart-2: 190 100% 54%;           /* #00E7FF - cyan-20v */\n    --chart-3: 125 69% 66%;            /* #70E17B - green-cool-20v */\n    --chart-4: 44 100% 69%;            /* #FFCB54 - gold-10v */\n    --chart-5: 3 77% 74%;              /* #F2938C - red-30 */\n  }\n}`;\n\nexport const NATIVEWIND_ENV = `/// <reference types=\"nativewind/types\" />`;\n\nexport const COMPONENTS_JSON = `{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"default\",\n  \"rsc\": false,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"tailwind.config.js\",\n    \"css\": \"global.css\",\n    \"baseColor\": \"neutral\",\n    \"cssVariables\": true,\n    \"prefix\": \"\"\n  },\n  \"iconLibrary\": \"lucide\",\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\",\n    \"ui\": \"@/components/ui\",\n    \"lib\": \"@/lib\",\n    \"hooks\": \"@/hooks\"\n  },\n  \"registries\": {}\n}`;"],"mappings":"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","names":["Command","Command","existsSync","path","z","chalk","existsSync","path","path","chalk","existsSync","spawn","Command","path","existsSync","Command"]}