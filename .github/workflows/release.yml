name: Release
on:
  push:
    branches:
      - main
    paths:
      - "packages/cli/**"
      - "packages/**"
      - ".github/workflows/release.yml"
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: true
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@10.18.1 --activate

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests in Registry package
        run: pnpm --filter @blen/react-native-usmds-registry test

      - name: Build packages
        run: |
          pnpm --filter @blen/usmds build
          pnpm turbo run build --filter=!docs

      - name: Generate registry artifacts
        run: pnpm registry:generate

      - name: Validate registry artifacts
        run: pnpm registry:validate

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload registry to GCS
        working-directory: packages/registry
        run: |
          ./scripts/upload-registry.sh

      - name: Clean up GCP credentials before publish
        run: |
          echo "Removing any GCP credential files..."
          rm -f gha-creds-*.json
          rm -f *-creds-*.json
          find . -name "gha-creds-*.json" -delete
          echo "Credentials cleaned up"

      - name: Debug npm environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo "Package.json content:"
          cat package.json
          echo "=== .npmignore content ==="
          cat .npmignore || echo "No .npmignore file"
          echo "=== Testing npm pack locally ==="
          npm pack --dry-run 2>&1 || true
          echo "=== NPM config ==="
          npm config list

      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm exec semantic-release --debug
