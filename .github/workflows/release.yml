name: Release
on:
  push:
    branches:
      - main
    paths:
      - "packages/cli/**"
      - "packages/**"
      - ".github/workflows/release.yml"
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@10.18.1 --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests in Registry package
        run: pnpm --filter @blen/react-native-usmds-registry test

      - name: Build packages
        run: |
          pnpm --filter usmds build
          pnpm turbo run build --filter=!docs --filter=!storybook

      - name: Build registry
        working-directory: packages/registry
        run: npx shadcn build ./registry/usa.json --output ./public/r/usa

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload registry to GCS
        working-directory: packages/registry
        run: |
          ./scripts/upload-registry.sh

      - name: Clean up GCP credentials before publish
        run: |
          echo "Removing any GCP credential files..."
          rm -f gha-creds-*.json
          rm -f *-creds-*.json
          find . -name "gha-creds-*.json" -delete
          echo "Credentials cleaned up"

      - name: Debug npm environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo "Package.json content:"
          cat package.json
          echo "=== .npmignore content ==="
          cat .npmignore || echo "No .npmignore file"
          echo "=== Testing npm pack locally ==="
          npm pack --dry-run 2>&1 || true
          echo "=== NPM config ==="
          npm config list

      - name: Capture current version
        id: version_before_release
        run: echo "value=$(node -p \"require('./package.json').version\")" >> "$GITHUB_OUTPUT"

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm exec semantic-release --debug

      - name: Collect release metadata
        id: release_metadata
        env:
          PREV_VERSION: ${{ steps.version_before_release.outputs.value }}
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          if [ "$NEW_VERSION" != "$PREV_VERSION" ]; then
            echo "released=true" >> "$GITHUB_OUTPUT"
          else
            echo "released=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Clean release artifacts
        if: steps.release_metadata.outputs.released == 'true'
        run: rm -rf dist

      - name: Create release PR
        if: steps.release_metadata.outputs.released == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: chore/release-${{ steps.release_metadata.outputs.new_version }}
          base: main
          title: "chore(release): ${{ steps.release_metadata.outputs.new_version }}"
          commit-message: "chore(release): ${{ steps.release_metadata.outputs.new_version }}"
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          add-paths: |
            CHANGELOG.md
            package.json
            packages/cli/package.json
          body: |
            ## Summary
            Automated release PR for version ${{ steps.release_metadata.outputs.new_version }}.
            Generated by semantic-release to update package metadata and changelog.
