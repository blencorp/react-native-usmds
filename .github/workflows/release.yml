name: Release
on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'
      - '.github/workflows/release.yml'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@10.18.1 --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests in Registry package
        run: pnpm --filter @blen/react-native-usmds-registry-internal test

      - name: Build packages
        run: |
          pnpm --filter @blen/react-native-usmds-cli-internal build
          pnpm turbo run build --filter=!docs --filter=!storybook

      - name: Build registry
        working-directory: packages/registry
        run: npx shadcn build ./registry/usa.json --output ./public/r/usa

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload registry to GCS
        working-directory: packages/registry
        run: |
          ./scripts/upload-registry.sh

      - name: Debug npm environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo "Package.json content:"
          cat package.json
          echo "=== .npmignore content ==="
          cat .npmignore || echo "No .npmignore file"
          echo "=== Testing npm pack locally ==="
          npm pack --dry-run 2>&1 || true
          echo "=== NPM config ==="
          npm config list

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm exec semantic-release --debug
